name: Pulumi
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - synchronize
      - opened
      - closed
    
env:
  PLAN_NAME: pr-${{ github.event.number }}-${{ github.sha }}.json
  PLAN_FILE: .pulumi/stacks/${{ github.event.repository.name }}/pr-${{ github.event.number }}-${{ github.sha }}.json
  AZURE_STORAGE_ARGS: --only-show-errors -c ${{ vars.PULUMI_STORAGE_BLOB_CONTAINER }} --account-name ${{ vars.PULUMI_STORAGE_BLOB_ACCOUNT }}
  PULUMI_CONFIG_PASSPHRASE: ""
  PULUMI_CLOUD_URL: azblob://${{ vars.PULUMI_STORAGE_BLOB_CONTAINER }}?storage_account=${{ vars.PULUMI_STORAGE_BLOB_ACCOUNT }}
  AZURE_STORAGE_ACCOUNT: ${{ secrets.PULUMI_STORAGE_BLOB_ACCOUNT }}
  AZURE_STORAGE_KEY: ${{ secrets.PULIMI_STORAGE_BLOB_CONTAINER }}
  AZURE_KEYVAULT_AUTH_VIA_CLI: true
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_USE_OIDC: true
  enable-AzPSSession: true
  AZURE_CLI_VERSION: 2.57.0
  GITHUB_OWNER: thaumazo


permissions:
      id-token: write
      contents: write
      pull-requests: write
      statuses: write
    
jobs:
  Pulumi:
    environment: development
    name: Pulumi change for PR
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Mark as draft
        if: |
          github.event_name == 'pull_request' &&
          ( github.event.action == 'opened' || github.event.action == 'synchronize' )
        uses: voiceflow/draft-pr@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Run PEP8'
        uses: quentinguidee/pep8-action@v1
        with:
          arguments: '--max-line-length=150'

      - name: "Azure Login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: "Check Storage"
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZURE_CLI_VERSION }}
          inlineScript: |
            az storage blob list ${{ env.AZURE_STORAGE_ARGS }} --prefix .pulumi/stacks/${{ github.event.repository.name }}

      - name: 'Install'
        run: |
           pip install -r requirements.txt ; python -m unittest discover -p test_app.py

      - uses: pulumi/actions@v5
        name: "Preview PR"
        env:
          ARM_CLIENT_SECRET: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
        if: |
          github.event_name == 'pull_request' &&
          ( github.event.action == 'opened' || github.event.action == 'synchronize' )
        with:
          command: preview
          comment-on-pr: true
          plan: ${{ env.PLAN_NAME }}
          cloud-url: ${{ env.PULUMI_CLOUD_URL }}
          stack-name: ${{ github.event.repository.name }}

      - name: Plan to Azure
        uses: azure/CLI@v1
        if: |
          github.event_name == 'pull_request' &&
          ( github.event.action == 'opened' || github.event.action == 'synchronize' )
        with:
          azcliversion: ${{ env.AZURE_CLI_VERSION }}
          inlineScript: |
            az storage blob upload ${{ env.AZURE_STORAGE_ARGS }} -f ${{ env.PLAN_NAME }} --overwrite true -n ${{ env.PLAN_FILE }}

      - name: Mark as Ready to Review
        uses: leemeador/ready-for-review-pr@v1.0.3 # please use latest version
        if: |
          github.event_name == 'pull_request' &&
          ( github.event.action == 'opened' || github.event.action == 'synchronize' )
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.number }}
          owner: thaumazo
          repo: ${{ github.repository.name }}

      - name: Plan from Azure
        uses: azure/CLI@v1
        if: |
          github.event.action == 'closed' && github.event.pull_request.merged == true
        with:
          azcliversion: ${{ env.AZURE_CLI_VERSION }}
          inlineScript: |
            az storage blob download ${{ env.AZURE_STORAGE_ARGS }} -f ${{ env.PLAN_NAME }} -n ${{ env.PLAN_FILE }}

      - uses: pulumi/actions@v5
        name: "Update Infrastructure"
        env:
          ARM_CLIENT_SECRET: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
        if: |
          github.event.action == 'closed' && github.event.pull_request.merged == true
        with:
          command: up
          cloud-url: ${{ env.PULUMI_CLOUD_URL }}
          plan: ${{ env.PLAN_NAME }}
